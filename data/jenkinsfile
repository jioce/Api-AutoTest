pipeline {
  agent {
    label 'maven'
  }
  stages {
    stage('checkout scm') {
      steps {
        git(branch: 'master', url: 'https://github.com/kubesphere/devops-maven-sample.git')
      }
    }

    stage('build & push') {
      agent none
      steps {
        container('maven') {
          sh 'mvn -Dmaven.test.skip=true clean package'
          sh 'docker build -f Dockerfile-online -t $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER .'
          withCredentials([usernamePassword(passwordVariable : 'DOCKER_PASSWORD' ,usernameVariable : 'DOCKER_USERNAME' ,credentialsId : "$DOCKER_CREDENTIAL_ID" ,)]) {
            sh 'echo "$DOCKER_PASSWORD" | docker login $REGISTRY -u "$DOCKER_USERNAME" --password-stdin'
            sh 'docker push  $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER'
          }

        }

      }
    }

    stage('deploy to dev') {
      agent none
      steps {
        container ('maven') {
          withCredentials([
                                                                                       kubeconfigFile(
                                                                                                     credentialsId: env.KUBECONFIG_CREDENTIAL_ID,
                                                                                                     variable: 'KUBECONFIG')
                                                                                                     ]) {
              sh 'envsubst < deploy/all-in-one/devops-sample.yaml | kubectl apply -f -'
            }
        }
          }
        }

      }
      environment {
        DOCKER_CREDENTIAL_ID = 'dockerhub-wx'
        KUBECONFIG_CREDENTIAL_ID = 'wx'
        REGISTRY = 'docker.io'
        DOCKERHUB_NAMESPACE = 'wenxinxin'
        APP_NAME = 'devops-maven-sample'
        BRANCH_NAME = 'dev'
        PROJECT_NAME = 'kubesphere-sample-dev'
      }
      parameters {
        string(name: 'TAG_NAME', defaultValue: '', description: '')
      }
    }